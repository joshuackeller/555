# 2. top_job_titles, plot_2
job_data %>%
group_by(job_simpl) %>%
summarize(n = n()) %>%
arrange(desc(n))
# 2. top_job_titles, plot_2
top_job_titles <- job_data %>%
group_by(job_simpl) %>%
summarize(n = n()) %>%
arrange(desc(n))
top_job_titles %>%
ggplot(aes(x = n, y = reorder(job_simpl, n), fill = job_simpl)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Top 10 Hiring Companies", x = "Company", y = "Number of Job Postings")
top_hiring_companies %>%
ggplot(aes(x = n, y = reorder(company, n), fill = company)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Top 10 Hiring Companies", x = "Number of Job Postings", y = "Company")
top_job_titles %>%
ggplot(aes(x = n, y = reorder(job_simpl, n), fill = job_simpl)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Jobs by Simplified Title", x = "Number of Job Postings", y = "Job Title")
plot_2 <- top_job_titles %>%
ggplot(aes(x = n, y = reorder(job_simpl, n), fill = job_simpl)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Jobs by Simplified Title", x = "Number of Job Postings", y = "Job Title")
top_hiring_companies %>%
ggplot(aes(x = n, y = reorder(company, n), fill = company)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Top 10 Hiring Companies", x = "Number of Job Postings", y = "Company")
plot_1 <- top_hiring_companies %>%
ggplot(aes(x = n, y = reorder(company, n), fill = company)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Top 10 Hiring Companies", x = "Number of Job Postings", y = "Company")
# 2. top_job_titles, plot_2
top_job_titles <- job_data %>%
group_by(job_simpl) %>%
summarize(n = n()) %>%
arrange(desc(n))
plot_2 <- top_job_titles %>%
ggplot(aes(x = n, y = reorder(job_simpl, n), fill = job_simpl)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Jobs by Simplified Title", x = "Number of Job Postings", y = "Job Title")
plot_2
# 3. skill_counts, plot_3
job_data %>%
glimpse
job_data %>%
select(ends_with("_yn"))
summarize_all(sum)
summarize_all(sum())
summarize_all(sum=sum)
summarize_all(list(sum=sum))
summarize_all(list(sum))
# 3. skill_counts, plot_3
job_data %>%
select(ends_with("_yn")) %>%
summarize_all(list(sum))
# 3. skill_counts, plot_3
# job_data %>%
#   select(ends_with("_yn")) %>%
#   summarize_all(list(sum))
job_data %>%
summarize(across(ends_with("_yn")), ~ sum(.x))
job_data %>%
select(ends_with("_yn")) %>%
summarize_all(list(sum))
# 3. skill_counts, plot_3
job_data %>%
select(ends_with("_yn")) %>%
summarize_all(list(sum)) %>%
pivot_longer(
names_to = "skill",
values_to = "count"
)
# 3. skill_counts, plot_3
job_data %>%
select(ends_with("_yn")) %>%
summarize_all(list(sum)) %>%
pivot_longer(
cols = everything(),
names_to = "skill",
values_to = "count"
)
# 3. skill_counts, plot_3
skill_counts <- job_data %>%
select(ends_with("_yn")) %>%
summarize_all(list(sum)) %>%
pivot_longer(
cols = everything(),
names_to = "skill",
values_to = "count"
)
skills_count %>%
ggplot(aes(x = count, y = reorder(skill, count), fill = skills)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Jobs by Simplified Title", x = "Number of Job Postings", y = "Skills")
skills_count %>%
ggplot(aes(x = count, y = reorder(skill, count), fill = skill)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Jobs by Simplified Title", x = "Number of Job Postings", y = "Skills")
skill_count %>%
ggplot(aes(x = count, y = reorder(skill, count), fill = skill)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Jobs by Simplified Title", x = "Number of Job Postings", y = "Skills")
skill_count %>%
ggplot(aes(x = count, y = reorder(skill, count), fill = skill)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Jobs by Simplified Title", x = "Number of Job Postings", y = "Skills")
skill_counts %>%
ggplot(aes(x = count, y = reorder(skill, count), fill = skill)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Jobs by Simplified Title", x = "Number of Job Postings", y = "Skills")
skill_counts %>%
ggplot(aes(x = count, y = reorder(skill, count), fill = skill)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Skills Required", x = "Number of Job Postings", y = "Skills")
plot_3 <- skill_counts %>%
ggplot(aes(x = count, y = reorder(skill, count), fill = skill)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Skills Required", x = "Number of Job Postings", y = "Skills")
plot_3
# 4. top_10_job_locations, plot_4
job_data %>%
group_by(location) %>%
summarize(n = n()) %>%
slice_max(order_by = n, n = 10)
# 4. top_10_job_locations, plot_4
top_10_job_locations <- job_data %>%
group_by(location) %>%
summarize(n = n()) %>%
slice_max(order_by = n, n = 10)
plot_4 <- top_10_job_locations %>%
ggplot(aes(x = n, y = reorder(location, n), fill = location)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Job Postings by Location", x = "Number of Job Postings", y = "Location")
plot_4
# 5. plot_5
job_data %>%
ggplot(x = salary_estimate) +
geom_hist()
# 5. plot_5
job_data %>%
ggplot(x = salary_estimate) +
geom_histogram()
# 5. plot_5
job_data %>%
ggplot(x = salary_estimate, y = job_simpl) +
geom_histogram()
# 5. plot_5
job_data %>%
ggplot(x = salary_estimate) +
geom_bar()
# 5. plot_5
job_data %>%
ggplot(salary_estimate) +
geom_histogram()+
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Number of Job Postings", y = "Salary Estimate (USD)")
# 5. plot_5
job_data %>%
ggplot(salary_estimate) +
geom_histogram()+
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Number of Job Postings", y = "Salary Estimate (USD)")
ggplot(aes(salary_estimate) +
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate)) +
geom_histogram()+
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Number of Job Postings", y = "Salary Estimate (USD)")
# 5. plot_5
job_data %>%
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate)) +
geom_histogram() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Number of Job Postings", y = "Salary Estimate (USD)")
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate)) +
geom_histogram() +
facet_wrap(~job_simpl)
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl)) +
geom_histogram() +
facet_wrap(~job_simpl)
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl)) +
geom_histogram() +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Number of Job Postings", y = "Salary Estimate (USD)")
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl)) +
geom_histogram() +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
plot_4 <- top_10_job_locations %>%
ggplot(aes(x = n, y = reorder(location, n), fill = location), labels = label_dollar()) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Job Postings by Location", x = "Number of Job Postings", y = "Location")
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl), labels = label_dollar()) +
geom_histogram() +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl, labels = label_dollar())) +
geom_histogram() +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl), , labels = label_dollar()) +
geom_histogram() +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl),  labels = label_dollar()) +
geom_histogram() +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl)) +
geom_histogram() +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl)) +
scale_x_continuous(labels = label_dollar()) +
geom_histogram() +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl)) +
geom_histogram() +
scale_x_continuous(labels = label_dollar()) +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
library(scales)
# 5. plot_5
job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl)) +
geom_histogram() +
scale_x_continuous(labels = label_dollar()) +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
# 6. industry_salary, plot_6
job_data %>%
glimpse
# 6. industry_salary, plot_6
job_data %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate))
# 6. industry_salary, plot_6
job_data %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate)) %>%
# 7. top_locations_salary, plot_7
# Naming Checks -----------------------------------------------------------------------------------------
# To help us avoid object or column name issues, I've included the following tests that will only pass
# if you have named your objects and columns exactly correct.
# IMPORTANT: You should not edit any of the code in this section. It should be run as a big block and you
# should see the test results at the end.
expected_object_names <- c(
"industry_salary",      "job_data",             "plot_1",               "plot_2",
"plot_3",               "plot_4",               "plot_5",               "plot_6",
"plot_7",               "skill_counts",         "top_10_job_locations", "top_hiring_companies",
"top_job_titles",       "top_locations_salary"
)
# 6. industry_salary, plot_6
job_data %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate)) %>%
print(n = 66)
# 6. industry_salary, plot_6
job_data %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate), na.rm = T) %>%
print(n = 66)
# 6. industry_salary, plot_6
job_data %>%
group_by(company_industry, na.rm = T) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate)) %>%
print(n = 66)
# 6. industry_salary, plot_6
job_data %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate), rm.na = T)
# 6. industry_salary, plot_6
job_data %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate, na.rm = T), mean_salary = mean(salary_estimate, rm.na = T))
# 6. industry_salary, plot_6
job_data %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate, na.rm = T), mean_salary = mean(salary_estimate, na.rm = T))
# 6. industry_salary, plot_6
job_data %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate, na.rm = T), mean_salary = mean(salary_estimate, na.rm = T)) %>%
print(n = 66)
# 6. industry_salary, plot_6
job_data %>%
filter(!is.na(salary_estimate)) %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate))
# 6. industry_salary, plot_6
job_data %>%
filter(!is.na(copmany_industry)) %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate))
# 6. industry_salary, plot_6
job_data %>%
filter(!is.na(company_industry)) %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate))
# 5. plot_5
plot_5 <- job_data %>%
ggplot(aes(salary_estimate, fill = job_simpl)) +
geom_histogram() +
scale_x_continuous(labels = label_dollar()) +
facet_wrap(~job_simpl) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Distribution of Salary Estimates", x = "Salary Estimate (USD)", y = "Number of Job Postings")
# 6. industry_salary, plot_6
plot_6 <- job_data %>%
filter(!is.na(company_industry)) %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate))
# 6. industry_salary, plot_6
industry_salary <- job_data %>%
filter(!is.na(company_industry)) %>%
group_by(company_industry) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate))
industry_salary %>%
ggplot(aes(x = median_salary, y = reorder(company_industry, median_salary), fill = company_industry)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Salary Estimates by Industry", x = "Median Salary Estimate (USD)", y = "Industry")
plot_6 <- industry_salary %>%
ggplot(aes(x = median_salary, y = reorder(company_industry, median_salary), fill = company_industry)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Salary Estimates by Industry", x = "Median Salary Estimate (USD)", y = "Industry")
# 7. top_locations_salary, plot_7
job_data %>%
mutate(new_col = count(location))
# 7. top_locations_salary, plot_7
job_data %>%
group_by(location) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate))
# 7. top_locations_salary, plot_7
job_data %>%
group_by(location) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate), n = n())
# 7. top_locations_salary, plot_7
job_data %>%
group_by(location) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate), n = n()) %>%
slice_max(order_by = n, n = 10)
# 7. top_locations_salary, plot_7
job_data %>%
group_by(location) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate), n = n()) %>%
slice_max(order_by = n, n = 10) %>%
arrange(location)
# 7. top_locations_salary, plot_7
job_data %>%
group_by(location) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate), n = n()) %>%
slice_max(order_by = n, n = 10) %>%
arrange(location) %>%
select(-n)
# 7. top_locations_salary, plot_7
top_locations_salary <- job_data %>%
group_by(location) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate), n = n()) %>%
slice_max(order_by = n, n = 10) %>%
arrange(location) %>%
select(-n)
top_locations_salary %>%
ggplot(aes(x = median_salary, y = reorder(location, median_salary), fill = location)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Salary Estimates by Industry", x = "Median Salary Estimate (USD)", y = "Industry")
top_locations_salary %>%
ggplot(aes(x = median_salary, y = reorder(location, median_salary), fill = location)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Salary Estimates by Location", x = "Median Salary Estimate (USD)", y = "Location")
top_locations_salary %>%
ggplot(aes(x = median_salary, y = reorder(location, median_salary), fill = location)) +
geom_col() +
scale_x_continuous(labels = label_dollar()) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Salary Estimates by Location", x = "Median Salary Estimate (USD)", y = "Location")
industry_salary %>%
ggplot(aes(x = median_salary, y = reorder(company_industry, median_salary), fill = company_industry)) +
geom_col() +
scale_x_continuous(labels = label_dollar()) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Salary Estimates by Industry", x = "Median Salary Estimate (USD)", y = "Industry")
plot_6 <- industry_salary %>%
ggplot(aes(x = median_salary, y = reorder(company_industry, median_salary), fill = company_industry)) +
geom_col() +
scale_x_continuous(labels = label_dollar()) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Salary Estimates by Industry", x = "Median Salary Estimate (USD)", y = "Industry")
# 7. top_locations_salary, plot_7
top_locations_salary <- job_data %>%
group_by(location) %>%
summarize(median_salary = median(salary_estimate), mean_salary = mean(salary_estimate), n = n()) %>%
slice_max(order_by = n, n = 10) %>%
arrange(location) %>%
select(-n)
top_locations_salary %>%
ggplot(aes(x = median_salary, y = reorder(location, median_salary), fill = location)) +
geom_col() +
scale_x_continuous(labels = label_dollar()) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Salary Estimates by Location", x = "Median Salary Estimate (USD)", y = "Location")
plot_7 <- top_locations_salary %>%
ggplot(aes(x = median_salary, y = reorder(location, median_salary), fill = location)) +
geom_col() +
scale_x_continuous(labels = label_dollar()) +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Salary Estimates by Location", x = "Median Salary Estimate (USD)", y = "Location")
source("~/Repos/555/is-555-09-individual-final-joshuackeller/individual_final.R", echo=TRUE)
getwd()
setwd("/Users/joshuakeller/Repos/555/is-555-09-individual-final-joshuackeller")
getwd()
setwd("/Users/joshuakeller/Repos/555/is-555-09-individual-final-joshuackeller")
getwd()
source("~/Repos/555/is-555-09-individual-final-joshuackeller/individual_final.R", echo=TRUE)
